version: '3'

services:

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672 # port for the daemon API
      - 15672:15672 # port for the RabbitMQ management interface
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5

  wishlist:
    image: trailerflix/wishlist
    build: ./Wishlist
    command: python3 manage.py runserver 0.0.0.0:8000 
    volumes:
      - .:/wish
      - ./Wishlist/db/db.sqlite3:/code/db.sqlite3
    ports:
      - "8000:8000"

  user:
    image: trailerflix/user
    build: ./User
    command: python3 manage.py runserver 0.0.0.0:8001
    volumes:
      - .:/user
      - ./User/db/db.sqlite3:/code/db.sqlite3
    ports:
      - "8001:8001" 

  catalogue:
    image: trailerflix/catalogue
    build: ./Catalogue
    command: python3 manage.py runserver 0.0.0.0:8002
    volumes:
      - .:/catalogue
      - ./Catalogue/db/db.sqlite3:/code/db.sqlite3
    ports:
      - "8002:8002"
    depends_on:
      - rabbitmq

  videostream:
    image: trailerflix/videostream
    build: ./VideoStream
    command: python main.py 
    volumes:
      - .:/videostream
      - ./VideoStream/db/videos.sqlite:/code/videos.sqlite
      - ./VideoStream/videos:/code/videos
    ports:
      - "8005:8005"

  consumer-service:
    image: trailerflix/consumer-service
    build: ./consumer-service
    command: python consumer.py
    restart: on-failure
    depends_on:
      - rabbitmq

  frontend:
    image: trailerflix/frontend
    build: ./frontend
    command: npm run serve 
    volumes:
      - .:/frontend
    ports:
      - "8080:8080"
    depends_on:
      - wishlist
      - user
      - catalogue
  
  backoffice:
    image: trailerflix/backoffice
    build: ./backend-support
    command: npm run serve 
    volumes:
      - .:/backend-support
    ports:
      - "8081:8081"
    depends_on:
      - catalogue
      
